---
title: "HUGTiP HIV-1 Drug Resistance Analysis"
author: "Poppy J Hesketh Best"
date: "`r Sys.Date()`"
format: 
  html: default
  pdf: default
params:
    sampleID: "insert_sampleID"
    run_params: "run_params.csv"
execute:
    echo: false  # Hide code output unless necessary
---

```{r, echo=FALSE, quiet=TRUE}
  library(tidyverse)

# Accessing parameters in R
  sample_ID    <- params$sampleID
  
  read_lengths <- read_csv("length-freq.tsv")
    colnames(read_lengths) <- c("length")
  
  read_counts  <- read_delim("stats.tsv")
  
  sierrapy     <- read_csv("sierrapy.hiv1.csv")
    sierrapy_dr <- sierrapy |> 
      select(-name, -subtype) |>  # Remove name and subtype columns
      pivot_longer(cols = everything(),  # Pivot all remaining columns
                  names_to = "Drug name", 
                  values_to = "HIVDB Score") |>
      filter(`HIVDB Score`>0) |> 
      mutate(
        `Drug susceptibility` = case_when(
          `HIVDB Score` >= 0  & `HIVDB Score` <= 9   ~ "Susceptible",
          `HIVDB Score` >= 10 & `HIVDB Score` <= 29  ~ "Low-level resistance",
          `HIVDB Score` >= 30 & `HIVDB Score` <= 59  ~ "Intermediate resistance",
          `HIVDB Score` >= 60                        ~ "High-level resistance",
          TRUE ~ NA_character_  # Handles any unexpected cases
        )
      )
  
  hydra        <- read_csv("hydra_report.csv") |>
                  mutate(Mutation_code = paste0(Wildtype,Position,Mutation,
                                      " (",`Mutation Frequency`,")", sep = "")
                                      )
    hydra_PR <- hydra |> filter(Gene == "PR")
    hydra_RT <- hydra |> filter(Gene == "RT")
    hydra_IN <- hydra |> filter(Gene == "IN")
  
  coverage     <- read_csv("coverage_file.csv", col_names = FALSE)
    colnames(coverage) <- c("position","coverage")
  
  hydra_vcf    <- read_delim("hydra.vcf", comment = "#", delim = '\t', col_names = FALSE)
    colnames(hydra_vcf) <- c("CHROM","GENE","POS","REF","ALT","FILTER","ALT_FREQ","COVERAGE","INFO")

  run_params <- read_csv("run_params.csv", col_names = FALSE)
    colnames(run_params) <- c("param", "val")
    parameters <- run_params |> pivot_wider(names_from = param, values_from = val)
```

-------------------------------------------------------------------------------------------

## Sequencing Summary

-------------------------------------------------------------------------------------------

**Query ID**: `r sample_ID`

**Total of reads**: `r sum(read_counts$num_seqs, na.rm = TRUE)` (PE: `r mean(read_counts$num_seqs, na.rm = TRUE)`)

**HIV subtype**: `r sierrapy$subtype`

-------------------------------------------------------------------------------------------

### Pipeline parameters

**Minimum read depth**: `r parameters$length_cutoff` | **Minimum read quality**: `r parameters$min_read_qual`

**Minimum mutation frequency percent to report**: `r parameters$min_ac`

**The minimum required allele count for variant to be considered**: `r parameters$min_ac`

**Minimum required read depth for variant to be considered**: `r parameters$min_dp`

**The minimum required frequency for mutation to be considered**: `r parameters$min_freq`

**Minimum percentage a base needs to be incorporated into the consensus sequence**: `r parameters$consensus_pct`

**Version control**: 
- Quasitools        : `r parameters$quasitools`
- SierraLocal       : `r parameters$Sierra`
  - SierraPy        : `r parameters$SierraPy`
  - Stanford HIVDB  : `r parameters$HIVdb`
- Trimmomatic       : `r parameters$trimmomatic`
- SeqKit            : `r parameters$seqkit`
- BowTie2           : `r parameters$BowTie2`

-------------------------------------------------------------------------------------------

## Drug resistance results 

-------------------------------------------------------------------------------------------

### RNA-dependent polymerase / RdRp

**Total Mutations**: `r nrow(hydra_PR)`

**PI Major Resistance Mutations (Frequency %)**: `r if(nrow(hydra_PR |> filter(Category == "Major")) == 0) "None" else hydra_PR |> filter(Category == "Major") |> select(Mutation_code) |> deframe() |> paste(collapse = ", ")`

**PI Accessory Resistance Mutations (Frequency %)**: `r if(nrow(hydra_PR |> filter(Category == "Minor")) == 0) "None" else hydra_PR |> filter(Category == "Minor") |> select(Mutation_code) |> deframe() |> paste(collapse = ", ")`

**Other PR Mutations (Frequency %)**: `r if(nrow(hydra_PR |> filter(Category == "Other")) == 0) "None" else hydra_PR |> filter(Category == "Other") |> select(Mutation_code) |> deframe() |> paste(collapse = ", ")`

Comments:


### Reverse Trascriptase  / RT

**Total Mutations**: `r nrow(hydra_RT)`

**NNRTI Major Resistance Mutations (Frequency %)**: `r`

**NNRTI Minor Resistance Mutations (Frequency %)**: `r`

**NRTI Accessory Resistance Mutations (Frequency %)**: `r`

**Other PR Mutations (Frequency %)**: `r if(nrow(hydra_RT |> filter(Category == "Other")) == 0) "None" else hydra_RT |> filter(Category == "Other") |> select(Mutation_code) |> deframe() |> paste(collapse = ", ")`

```{r, echo=FALSE}
#| label: table-NRTI
#| warning: false

library(gt)

# Format and print table using gt
sierrapy_dr |> 
  arrange(`Drug name`) |>  # Optional sorting
  gt() |> 
  tab_header(title = "Mutation HIVDB Scores: NRTI")

```

Comments:


### Intergrase / IN

**Total Mutations**: `r nrow(hydra_IN)`

**INI Major Resistance Mutations (Frequency %)**: `r`

**INI Minor Resistance Mutations (Frequency %)**: `r`

**INI Accessory Resistance Mutations (Frequency %)**: `r`

**Other PR Mutations (Frequency %)**: `r if(nrow(hydra_IN |> filter(Category == "Other")) == 0) "None" else hydra_IN |> filter(Category == "Other") |> select(Mutation_code) |> deframe() |> paste(collapse = ", ")`

Comments:

-------------------------------------------------------------------------------------------

## Sequencing analysis summary

### Read fragments

```{r, echo=FALSE}
#| label: fig-read-histogram
#| fig-cap: "Histogram of read lengths"
#| warning: false
#| layout: [[50,50], [100]]

  library(tidyverse);library(ggplot2)

  read_lengths |>
    ggplot( aes(x=length)) +
      geom_histogram( binwidth=1, fill="#69b3a2", color="#e9ecef", alpha=0.9) +
      ggtitle("Bin size = 1") +
      theme_bw() +
      theme(
        plot.title = element_text(size=15)
      )

  read_lengths |>
    mutate(sample = paste(sample_ID)) |>
    ggplot( aes(
              y=length, 
              x = sample )
          ) +
      geom_boxplot() +
    geom_jitter(color="black", size=0.4, alpha=0.9) +
    theme_bw() +
    theme(
      legend.position="none",
      plot.title = element_text(size=11)
    ) +
    ggtitle("Read lengths") +
    xlab("")

  
```

### Genome coverage

```{r, echo=FALSE}
#| label: fig-hiv_coverage
#| fig-cap: "Annotated genome with read coverage."
#| warning: false

  library(tidyverse);library(ggplot2)

  ggplot(coverage, 
        aes(
          x = position, 
          y = coverage)
        ) + 
    geom_line() +
    theme_bw() +
    theme(
      legend.position="none",
      plot.title = element_text(size=11)
    ) +
    labs(x = "Position along HVB2 pol", y = "Depth of coverage (no. reads)") +
    geom_rect(aes(xmin = 0, xmax = 296, ymin = -200, ymax = -0, fill = "blue")) +
    geom_rect(aes(xmin = 297, xmax = 1616, ymin = -500, ymax = -300, fill = "red")) +
    geom_rect(aes(xmin = 1977, xmax = 2843, ymin = -200, ymax = 0, fill = "green"))
    





```


-------------------------------------------------------------------------------------------


## Citations
