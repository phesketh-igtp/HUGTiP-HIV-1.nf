/*
    SET UP CONFIGURATION VARIABLES
 */

params {
    // Configurable variables
        name            = false
        project         = false
        plaintext_email = false
        version         = '1.0.0-alpha'

    // Directories paths
        projectDir  = '/home/phesketh/Documents/GitHub/QuasiFlow'
        outdir      = 'out/'
        workDir     = 'work/'
        scriptDir   = "${projectDir}/bin"
        dbDir       = "${projectDir}/db"

    // Conda environments
        conda_main_envs = "${projectDir}/envs/main_env.yml"
        conda_R_envs    = "${projectDir}/envs/R_env.yml"
        conda_fastp_envs= "${projectDir}/envs/fastp_env.yml"

    // Singulairity image (created with seqera container webtool)
        singularity_main_img   = "https://community-cr-prod.seqera.io/docker/registry/v2/blobs/sha256/8b/8bf5a27974bdfd2cefb057590f5f00bf1fdf8a867840a5a36a13f1ddf6c13660/data" //https://wave.seqera.io/view/builds/bd-0cd035ecd5b73b34_1
        singularity_R_img      = "https://community-cr-prod.seqera.io/docker/registry/v2/blobs/sha256/6b/6bde1a3f587bf0c4cc33f6b0b691f937ac05aab2d9aa190bf8128bae4601b2d2/data" //	https://wave.seqera.io/view/builds/bd-9d7b54c05840e778_1

    // Docker image (created with seqera container webtool)
        docker_main_img   = "community.wave.seqera.io/library/bowtie2_fastqc_multiqc_quasitools_pruned:826dc7d6f77cd936" //https://wave.seqera.io/view/builds/bd-826dc7d6f77cd936_1
        docker_R_img      = "community.wave.seqera.io/library/r-argparse_r-base_r-dplyr_r-ggrepel_pruned:bcf1f83dcb5076ae" //	https://wave.seqera.io/view/builds/bd-bcf1f83dcb5076ae_1

    // Params for HyDRA
        mutation_db         = ''
        reporting_threshold = 1
        consensus_pct       = 20
        min_read_qual       = 30
        length_cutoff       = 200
        score_cutoff        = 30
        min_variant_qual    = 30
        min_dp              = 100
        min_ac              = 5
        min_freq            = 0.2
}

/*
 * PROFILES
 */

profiles {
    conda_on {
        process.conda   = "${params.outdir}/envs/conda"
        conda {
            enabled     = true
            cacheDir    = "${params.outdir}/envs/conda"
            mamba       = true
        }
    }

    singularity_on {
        process.container   = "${params.outdir}/envs/singularity"
        singularity {
            enabled         = true
            cacheDir        = "${params.outdir}/envs/singularity"
        }
    }

    docker_on {
        docker {
            enabled         = true
            cacheDir        = "${params.outdir}/envs/docker"
        }
    }
}

process {
    withName: runTrimFiltReads {
        cpus            = 2
        memory          = 4.GB
        time            = 20.min
        maxRetries      = 3
    }
    
    withName: runfastQC {
        cpus            = 2
        memory          = 4.GB
        time            = 20.min
        maxRetries      = 3
    }
    
    withName: getReadStats {
        cpus            = 1
        memory          = 4.GB
        time            = 5.min
    }
        
    withName: runMultiQC {
        cpus            = 2
        memory          = 6.GB
        time            = 30.min
    }
    
    withName: runHydra {
        cpus            = { 1 * task.attempt }
        memory          = { 3.GB * task.attempt }
        time            = { 20.min * task.attempt }
        errorStrategy   = { task.exitStatus in 137..140 ? 'retry' : 'terminate' }
        maxRetries      = 2
    }
    
    withName: runSierralocal {
        cpus            = 1
        memory          = 2.GB
        time            = { 20.min * task.attempt }
        errorStrategy   = { task.exitStatus in 137..140 ? 'retry' : 'terminate' }
        maxRetries      = 3
    }
    
    withName: renderReport {
        cpus            = 1
        memory          = 6.GB
        time            = 10.min
    }
    
    withName: getVersions {
        cpus            = 1
        memory          = 4.GB
        time            = 10.min
    }
}

// Produce nextflow reports
timeline {
    enabled     = true
    file        = "${params.outdir}/pipeline_info/${params.runID}_timeline.html"
    overwrite   = true
}

report {
    enabled     = true
    file        = "${params.outdir}/pipeline_info/${params.runID}_report.html"
    overwrite   = true
}

trace {
    enabled     = true
    file        = "${params.outdir}/pipeline_info/${params.runID}_trace.txt"
    overwrite   = true
}

dag {
    enabled     = true
    file        = "${params.outdir}/pipeline_info/${params.runID}_dag.svg"
    overwrite   = true
}

dag.direction   = 'TB'